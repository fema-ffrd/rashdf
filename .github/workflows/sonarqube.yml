name: SonarQube Analysis

on:
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 3 * * 1'  # Weekly on Monday at 3 AM UTC

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    services:
      sonarqube:
        image: sonarqube:community
        ports:
          - 9000:9000
        env:
          SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: true
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Wait for SonarQube
      run: |
        timeout 300 bash -c 'until curl -s http://localhost:9000/api/system/status | grep -q "UP"; do sleep 5; done'
    
    - name: Generate SonarQube token
      run: |
        sleep 10
        TOKEN=$(curl -s -u admin:admin -X POST "http://localhost:9000/api/user_tokens/generate?name=github-actions" | jq -r '.token')
        echo "SONAR_TOKEN=$TOKEN" >> $GITHUB_ENV
    
    - name: Setup SonarQube Scanner
      uses: warchant/setup-sonar-scanner@v8
    
    - name: Run SonarQube Analysis
      run: |
        sonar-scanner \
          -Dsonar.projectKey=rashdf \
          -Dsonar.sources=src \
          -Dsonar.tests=tests \
          -Dsonar.host.url=http://localhost:9000 \
          -Dsonar.token=$SONAR_TOKEN \
          -Dsonar.exclusions="tests/data/**,**/*.yml,**/*.yaml"
    
    - name: Extract SonarQube Results
      run: |
        sleep 15
        
        echo "## SonarQube Analysis Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        MEASURES=$(curl -s -u admin:admin "http://localhost:9000/api/measures/component?component=rashdf&metricKeys=bugs,vulnerabilities,code_smells,duplicated_lines_density,ncloc,sqale_rating,reliability_rating,security_rating")
        
        if echo "$MEASURES" | jq -e '.component.measures' > /dev/null 2>&1; then
          echo "### Key Metrics:" >> $GITHUB_STEP_SUMMARY
          echo "$MEASURES" | jq -r '.component.measures[] | "- **\(.metric)**: \(.value // "N/A")"' >> $GITHUB_STEP_SUMMARY
          
          BUGS=$(echo "$MEASURES" | jq -r '.component.measures[] | select(.metric == "bugs") | .value // "0"')
          VULNERABILITIES=$(echo "$MEASURES" | jq -r '.component.measures[] | select(.metric == "vulnerabilities") | .value // "0"')
          CODE_SMELLS=$(echo "$MEASURES" | jq -r '.component.measures[] | select(.metric == "code_smells") | .value // "0"')
        else
          echo "### Key Metrics:" >> $GITHUB_STEP_SUMMARY
          echo "- Unable to retrieve metrics data" >> $GITHUB_STEP_SUMMARY
          BUGS=0
          VULNERABILITIES=0
          CODE_SMELLS=0
        fi
        
        ISSUES=$(curl -s -u admin:admin "http://localhost:9000/api/issues/search?componentKeys=rashdf&facets=severities,types")
        
        echo "" >> $GITHUB_STEP_SUMMARY
        if echo "$ISSUES" | jq -e '.facets' > /dev/null 2>&1; then
          echo "### Issues Summary:" >> $GITHUB_STEP_SUMMARY
          
          TOTAL_ISSUES=$(echo "$ISSUES" | jq -r '.total // 0')
          
          if [ "$TOTAL_ISSUES" -eq 0 ]; then
            echo "- No issues found! ✅" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Total Issues:** $TOTAL_ISSUES" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            if echo "$ISSUES" | jq -e '.facets[] | select(.property == "severities")' > /dev/null 2>&1; then
              echo "**By Severity:**" >> $GITHUB_STEP_SUMMARY
              echo "$ISSUES" | jq -r '.facets[] | select(.property == "severities") | .values[] | "- \(.val): \(.count)"' >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
            fi
            
            if echo "$ISSUES" | jq -e '.facets[] | select(.property == "types")' > /dev/null 2>&1; then
              echo "**By Type:**" >> $GITHUB_STEP_SUMMARY
              echo "$ISSUES" | jq -r '.facets[] | select(.property == "types") | .values[] | "- \(.val): \(.count)"' >> $GITHUB_STEP_SUMMARY
            fi
          fi
        else
          echo "### Issues Summary:" >> $GITHUB_STEP_SUMMARY
          echo "- Unable to retrieve issues data" >> $GITHUB_STEP_SUMMARY
          TOTAL_ISSUES=0
        fi
        
        echo "TOTAL_ISSUES=$TOTAL_ISSUES" >> $GITHUB_ENV
        echo "BUGS=$BUGS" >> $GITHUB_ENV
        echo "VULNERABILITIES=$VULNERABILITIES" >> $GITHUB_ENV
        echo "CODE_SMELLS=$CODE_SMELLS" >> $GITHUB_ENV
    
    - name: Comment on PR
      if: github.event_name == 'pull_request' && (env.TOTAL_ISSUES != '0' || env.BUGS != '0' || env.VULNERABILITIES != '0' || env.CODE_SMELLS != '0')
      uses: actions/github-script@v7
      with:
        script: |
          const totalIssues = '${{ env.TOTAL_ISSUES }}';
          const bugs = '${{ env.BUGS }}';
          const vulnerabilities = '${{ env.VULNERABILITIES }}';
          const codeSmells = '${{ env.CODE_SMELLS }}';
          
          const comment = `## 🔍 SonarQube Analysis Results
          
          **Summary:**
          - 🐛 **Bugs:** ${bugs}
          - 🔒 **Vulnerabilities:** ${vulnerabilities}  
          - 🧹 **Code Smells:** ${codeSmells}
          - 📊 **Total Issues:** ${totalIssues}
          
          > 💡 Review the [workflow summary](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for detailed metrics.
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });